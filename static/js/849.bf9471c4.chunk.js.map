{"version":3,"file":"static/js/849.bf9471c4.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/capture-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/stats/animation-count.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/@heroui/dom-animation/dist/index.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs"],"sourcesContent":["import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","function capturePointer(event, action) {\n    const actionName = `${action}PointerCapture`;\n    if (event.target instanceof Element &&\n        actionName in event.target &&\n        event.pointerId !== undefined) {\n        try {\n            event.target[actionName](event.pointerId);\n        }\n        catch (e) { }\n    }\n}\n\nexport { capturePointer };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { capturePointer } from '../utils/capture-pointer.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!target || !isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        capturePointer(startEvent, \"set\");\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            target.removeEventListener(\"pointerup\", onPointerUp);\n            target.removeEventListener(\"pointercancel\", onPointerCancel);\n            capturePointer(endEvent, \"release\");\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            const isOutside = !upEvent.isTrusted\n                ? false\n                : checkOutside(upEvent, target instanceof Element\n                    ? target.getBoundingClientRect()\n                    : {\n                        left: 0,\n                        top: 0,\n                        right: window.innerWidth,\n                        bottom: window.innerHeight,\n                    });\n            if (isOutside) {\n                onPointerEnd(upEvent, false);\n            }\n            else {\n                onPointerEnd(upEvent, !(target instanceof Element) ||\n                    isNodeOrChild(target, upEvent.target));\n            }\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        target.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        target.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n        target.addEventListener(\"lostpointercapture\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        target = options.useGlobalTarget ? window : target;\n        let canAddKeyboardAccessibility = false;\n        if (target instanceof HTMLElement) {\n            canAddKeyboardAccessibility = true;\n            if (!isElementKeyboardAccessible(target) &&\n                target.getAttribute(\"tabindex\") === null) {\n                target.tabIndex = 0;\n            }\n        }\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (canAddKeyboardAccessibility) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n        }\n    });\n    return cancelEvents;\n}\nfunction checkOutside(event, rect) {\n    return (event.clientX < rect.left ||\n        event.clientX > rect.right ||\n        event.clientY < rect.top ||\n        event.clientY > rect.bottom);\n}\n\nexport { press };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.4.7\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\nimport { activeAnimations } from '../../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../../stats/buffer.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.4.7\", `Attempting to mix Motion versions ${nextValue.version} with 12.4.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","\"use client\";\n\n// src/index.ts\nimport { domAnimation } from \"framer-motion\";\nvar index_default = domAnimation;\nexport {\n  index_default as default\n};\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n"],"names":["resolveVariant","visualElement","definition","custom","props","getProps","resolveVariantFromProps","undefined","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","i","length","attachTimeline","timeline","fallback","subscriptions","forEach","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","transition","key","maxGeneratorDuration","calcGeneratorDuration","generator","state","next","done","Infinity","isGenerator","type","onfinish","isBezierDefinition","easing","Array","isArray","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","animate","opacity","e","progress","from","to","value","toFromDifference","generateLinearEasing","resolution","arguments","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_ref","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","EventTarget","root","current","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","capturePointer","action","actionName","target","Element","pointerId","isNodeOrChild","parent","child","parentElement","focusableElements","Set","isPressing","WeakSet","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","isPrimary","bubbles","isValidPressEvent","button","isPrimaryPointer","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","startEvent","currentTarget","has","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","isOutside","isTrusted","rect","getBoundingClientRect","left","top","right","innerWidth","bottom","innerHeight","clientX","clientY","cancelEvent","addEventListener","canAddKeyboardAccessibility","element","useGlobalTarget","HTMLElement","tagName","tabIndex","getAttribute","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","positionalKeys","transformPropOrder","now","clearTime","set","frameData","isProcessing","MotionGlobalConfig","useManualTiming","timestamp","performance","newTime","queueMicrotask","SubscriptionManager","handler","arr","item","indexOf","push","index","splice","removeItem","notify","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","v","render","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","frame","read","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","delta","jump","endAnimation","get","getPrevious","getVelocity","min","start","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","addValueToWillChange","willChange","isMotionValue","getOptimisedAppearId","optimizedAppearDataAttribute","instantAnimationState","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","alpha","match","rgbUnit","number","transform","clamp","clampRgbUnit","rgba","parse","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","percent","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","values","indexes","var","types","split","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","unit","defaultValue","functionRegex","functions","join","defaultValueTypes","numberValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","px","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","Map","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","token","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","trim","isCSSVariableToken","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","activeAnimations","layout","mainThread","waapi","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","_len","transformers","_key","reduce","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","default","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","update","passTimestamp","cancelFrame","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","statsBuffer","iterations","direction","finally","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transformProps","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","resolveFinalValueInKeyframes","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","numVariantProps","variantProps","getVariantContext","isControllingVariants","context","initial","prop","isVariantLabel","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","extractEventInfo","point","pageX","pageY","handleHoverEvent","lifecycle","postRender","addDomEvent","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","instance","transformPoint","convertBoundingBoxToBox","topLeft","bottomRight","transformBoxPoints","createBox","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","reducedMotionConfig","visualState","children","isVariantNode","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","isBrowser","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","remove","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","preRender","isTransformDirty","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","updateFeatures","featureDefinitions","featureDefinition","isEnabled","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getTransformPagePoint","transformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","args","DOMVisualElement","compareDocumentPosition","vars","childSubscription","textContent","HTMLVisualElement","renderHTML","defaultType","computedStyle","isCSSVariableName","buildHTMLStyles","SVGVisualElement","isSVGTag","updateDimensions","dimensions","updateSVGDimensions","camelCaseAttributes","camelToDash","buildSVGAttrs","styleProp","renderSVG","index_default","renderer","createDomVisualElement","Component","isSVGComponent","allowProjection","Fragment"],"sourceRoot":""}